---
#------------------------------------------------------------------------------
# Lawrence McDaniel - https://lawrencemcdaniel.com
# Version Bump Workflow
#
# Calculate the version of the 'next' branch based on semantic-release rules.
# Compares the existing value of __version__.py to the calculated value.
# If they are different, it will update __version__.py and push the changes
# to the main branch.
#------------------------------------------------------------------------------
name: Semantic Version Bump

on:
  workflow_dispatch:
  push:
    branches:
      - alpha
      - beta
      - test
      - next
      - next-major

jobs:
  bump-version-next:
    runs-on: ubuntu-latest
    env:
      VERSION_FILE: __version__.py
      PACKAGE_PATH: ${{ github.workspace }}/smarter/smarter/

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "20.9.0"

      - name: Install npm dependencies
        run: npm install

      - name: Get current version and calculate next version
        id: version
        run: |
          cd ${{ env.PACKAGE_PATH }}
          CURRENT_VERSION=$(python -c 'from __version__ import __version__; print(__version__)')
          NEXT_VERSION=$(npx semantic-release --dry-run --no-ci  | awk '/The next release version is/{print $NF}')
          NEXT_VERSION=${NEXT_VERSION:-$CURRENT_VERSION}
          VERSION_CHANGED=$([ "$CURRENT_VERSION" != "$NEXT_VERSION" ] && echo "true" || echo "false")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "VERSION_CHANGED=$VERSION_CHANGED" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Update __version__.py
        if: env.VERSION_CHANGED == 'true'
        id: update_version
        run: |
          echo "# -*- coding: utf-8 -*-" > ${{ env.VERSION_FILE }}
          echo "# DO NOT EDIT." >> ${{ env.VERSION_FILE }}
          echo "# Managed via automated CI/CD in .github/workflows/semanticVersionBump.yml." >> ${{ env.VERSION_FILE }}
          echo "__version__ = \"${{ env.NEXT_VERSION }}\"" >>  ${{ env.VERSION_FILE }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.VERSION_FILE }}
          git commit -m "chore: [gh] Update __version__.py to ${{ env.NEXT_VERSION }} [skip ci]"
          git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
        env:
          VERSION_FILE: ${{ env.PACKAGE_PATH }}${{ env.VERSION_FILE }}
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NEXT_VERSION: ${{ env.NEXT_VERSION }}
          VERSION_CHANGED: ${{ env.VERSION_CHANGED }}
