---
#------------------------------------------------------------------------------
# Run Python unit tests
#------------------------------------------------------------------------------
name: Test Python
branding:
  icon: "git-pull-request"
  color: "orange"
inputs:
  environment:
    description: "The environment to deploy"
    required: true
    default: "dev"
  root-domain:
    description: "The root domain of the project"
    required: true
    type: string
  python-version:
    description: "The version of Python to use, such as 3.11.0"
    required: true
    type: string
  openai-api-key:
    description: "The OpenAI API key"
    required: true
    type: string
  pinecone-api-key:
    description: "The Pinecone API key"
    required: true
    type: string
  pinecone-environment:
    description: "The Pinecone environment"
    required: true
    type: string
  google-maps-api-key:
    description: "Google Maps API key"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout code
      id: checkout
      uses: actions/checkout@v4

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('./smarter/requirements/**/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip

    - name: Echo environment variables
      shell: bash
      run: |
        echo "Using Django ${{ inputs.environment }} settings"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: locate site-packages path
      shell: bash
      run: |
        echo "SITE_PACKAGES_PATH=$(python -c 'import site; print(site.getsitepackages()[0])')" >> $GITHUB_ENV

    - name: Install pip
      shell: bash
      run: |
        python -m pip install --upgrade pip

    - name: Install dependencies
      shell: bash
      run: |
        pip install -r ./smarter/requirements/local.txt
      env:
        SITE_PACKAGES_PATH: ${{ env.SITE_PACKAGES_PATH }}

    - name: Create .env
      shell: bash
      run: |
        touch ./.env
        echo "GOOGLE_MAPS_API_KEY=${{ env.GOOGLE_MAPS_API_KEY }}" >> ./.env
        echo "OPENAI_API_ORGANIZATION=${{ env.OPENAI_API_ORGANIZATION }}" >> ./.env
        echo "OPENAI_API_KEY=${{ env.OPENAI_API_KEY }}" >> ./.env
        echo "PINECONE_API_KEY=${{ env.PINECONE_API_KEY }}" >> ./.env
        echo "PINECONE_ENVIRONMENT=${{ env.PINECONE_ENVIRONMENT }}" >> ./.env
        echo "DEBUG_MODE=False" >> ./.env
        echo "ENVIRONMENT=${{ inputs.environment }}" >> ./.env
        echo "ROOT_DOMAIN=${{ inputs.root-domain }}" >> ./.env

      env:
        OPENAI_API_KEY: ${{ inputs.openai-api-key }}
        PINECONE_API_KEY: ${{ inputs.pinecone-api-key }}
        PINECONE_ENVIRONMENT: ${{ inputs.pinecone-environment }}
        GOOGLE_MAPS_API_KEY: ${{ inputs.google-maps-api-key }}

    - name: Run Python unit tests
      shell: bash
      env:
        GITHUB_ACTIONS: "true"
        DEBUG_MODE: "true"
      run: |
        make django-init
        make python-test
