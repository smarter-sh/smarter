{
  "model": "gpt-4-turbo",
  "tools": [
    {
      "type": "function",
      "function": {
        "name": "get_current_weather",
        "parameters": {
          "type": "object",
          "required": [
            "location"
          ],
          "properties": {
            "unit": {
              "enum": [
                "METRIC",
                "USCS"
              ],
              "type": "string"
            },
            "location": {
              "type": "string",
              "description": "The city and state, e.g. San Francisco, CA"
            }
          }
        },
        "description": "Get the current weather in a given location"
      }
    }
  ],
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful chatbot. When given the opportunity to utilize function calling, you should always do so. This will allow you to provide the best possible responses to the user. If you are unable to provide a response, you should prompt the user for more information. If you are still unable to provide a response, you should inform the user that you are unable to help them at this time.\n\n and also Your job is to provide helpful technical information about the OpenAI API Function Calling feature. You should include the following information in your response: \"Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\"\n\n\n and also Your job is to provide helpful technical information about the OpenAI API Function Calling feature. You should include the following information in your response: \"Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\"\n"
    },
    {
      "role": "assistant",
      "content": "Welcome to the Smarter demo!"
    },
    {
      "role": "assistant",
      "content": "Some example prompts to get you started:\r\n\r\nWhat is the weather in San Francisco?\r\nWhat is an Everlasting Gobstopper?\r\nexample function calling configuration\r\n"
    },
    {
      "role": "user",
      "content": "example function calling configuration"
    },
    {
      "role": "assistant",
      "content": "Tool call: function_calling_plugin_0002({\"inquiry_type\":\"about\"})"
    },
    {
      "role": "assistant",
      "content": "Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\n\n\"In an API call, you can describe functions and have the model intelligently choose to output a JSON object containing arguments to call one or many functions. The Chat Completions API does not call the plugin_data; instead, the model generates JSON that you can use to call the plugin_data in your code. The latest models (gpt-4-turbo and gpt-4-1106-preview) have been trained to both detect when a plugin_data should be called (depending on the input) and to respond with JSON that adheres to the plugin_data signature more closely than previous models. With this capability also comes potential risks. We strongly recommend building in user confirmation flows before taking actions that impact the world on behalf of users (sending an email, posting something online, making a purchase, etc).\""
    },
    {
      "role": "assistant",
      "content": "Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\n\n\"In an API call, you can describe functions and have the model intelligently choose to output a JSON object containing arguments to call one or many functions. The Chat Completions API does not call the plugin_data; instead, the model generates JSON that you can use to call the plugin_data in your code. The latest models (gpt-4-turbo and gpt-4-1106-preview) have been trained to both detect when a plugin_data should be called (depending on the input) and to respond with JSON that adheres to the plugin_data signature more closely than previous models. With this capability also comes potential risks. We strongly recommend building in user confirmation flows before taking actions that impact the world on behalf of users (sending an email, posting something online, making a purchase, etc).\""
    },
    {
      "role": "user",
      "content": "example function calling configuration"
    },
    {
      "role": "assistant",
      "content": "Tool call: function_calling_plugin_0002({\"inquiry_type\":\"about\"})"
    },
    {
      "role": "assistant",
      "content": "Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\n\n\"In an API call, you can describe functions and have the model intelligently choose to output a JSON object containing arguments to call one or many functions. The Chat Completions API does not call the plugin_data; instead, the model generates JSON that you can use to call the plugin_data in your code. The latest models (gpt-4-turbo and gpt-4-1106-preview) have been trained to both detect when a plugin_data should be called (depending on the input) and to respond with JSON that adheres to the plugin_data signature more closely than previous models. With this capability also comes potential risks. We strongly recommend building in user confirmation flows before taking actions that impact the world on behalf of users (sending an email, posting something online, making a purchase, etc).\""
    },
    {
      "role": "assistant",
      "content": "Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\n\n\"In an API call, you can describe functions and have the model intelligently choose to output a JSON object containing arguments to call one or many functions. The Chat Completions API does not call the plugin_data; instead, the model generates JSON that you can use to call the plugin_data in your code. The latest models (gpt-4-turbo and gpt-4-1106-preview) have been trained to both detect when a plugin_data should be called (depending on the input) and to respond with JSON that adheres to the plugin_data signature more closely than previous models. With this capability also comes potential risks. We strongly recommend building in user confirmation flows before taking actions that impact the world on behalf of users (sending an email, posting something online, making a purchase, etc).\""
    },
    {
      "role": "user",
      "content": "what's the weather like in san francisco california right now?"
    },
    {
      "role": "assistant",
      "content": "Tool call: get_current_weather({\"location\":\"San Francisco, CA\",\"unit\":\"USCS\"})"
    },
    {
      "role": "assistant",
      "content": "Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\n\nThe current weather in San Francisco, California is approximately 66.3°F with no precipitation expected at this time."
    },
    {
      "role": "assistant",
      "content": "Congratulations!!! OpenAI API Function Calling chose to call this plugin_data. Here is the additional information that you requested:\n\nThe current weather in San Francisco, California is approximately 66.3°F with no precipitation expected at this time."
    },
    {
      "role": "user",
      "content": "hi mom"
    },
    {
      "role": "assistant",
      "content": "Hello! It seems like you might have mistaken me for someone else. I'm here to help with any questions or information you might need. How can I assist you today?"
    }
  ],
  "max_tokens": 256,
  "temperature": 0.5
}
