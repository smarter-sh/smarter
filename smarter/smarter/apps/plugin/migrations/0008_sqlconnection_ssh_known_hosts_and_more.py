# Generated by Django 5.1.7 on 2025-05-07 18:01
# pylint: disable=missing-module-docstring,missing-function-docstring,missing-class-docstring

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import smarter.apps.plugin.models


class Migration(migrations.Migration):

    dependencies = [
        ("account", "0008_alter_secret_options_alter_secret_last_accessed_and_more"),
        ("plugin", "0007_remove_sqlconnection_version_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="sqlconnection",
            name="ssh_known_hosts",
            field=models.TextField(
                blank=True,
                help_text="The known_hosts file content for verifying SSH connections. Usually comes from ~/.ssh/known_hosts.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="apiconnection",
            name="name",
            field=models.CharField(
                help_text="The name of the API connection, camelCase, without spaces. Example: 'weatherApi', 'stockApi'.",
                max_length=255,
                validators=[smarter.apps.plugin.models.validate_camel_case],
            ),
        ),
        migrations.AlterField(
            model_name="plugindatasql",
            name="limit",
            field=models.IntegerField(
                blank=True,
                help_text="The maximum number of rows to return from the query.",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="plugindatasql",
            name="name",
            field=models.CharField(
                help_text="The name of the SQL connection, camelCase, without spaces. Example: 'HRDatabase', 'SalesDatabase', 'InventoryDatabase'.",
                max_length=255,
                validators=[smarter.apps.plugin.models.validate_camel_case],
            ),
        ),
        migrations.AlterField(
            model_name="pluginmeta",
            name="name",
            field=models.CharField(
                help_text="The name of the plugin. Example: 'HR Policy Update' or 'Public Relation Talking Points'.",
                max_length=255,
                validators=[smarter.apps.plugin.models.validate_camel_case],
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="authentication_method",
            field=models.CharField(
                choices=[
                    ("none", "None"),
                    ("tcpip", "Tcpip"),
                    ("tcpip_ssh", "Tcpip Ssh"),
                    ("ldap_user_pwd", "Ldap User Pwd"),
                ],
                default="none",
                help_text="The authentication method to use for the connection. Example: 'Standard TCP/IP', 'Standard TCP/IP over SSH', 'LDAP User/Password'.",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="database",
            field=models.CharField(help_text="The name of the database to connect to.", max_length=255),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="db_engine",
            field=models.CharField(
                choices=[
                    ("django.db.backends.mysql", "MySQL"),
                    ("django.db.backends.postgresql", "PostgreSQL"),
                    ("django.db.backends.sqlite3", "SQLite3"),
                    ("django.db.backends.oracle", "Oracle"),
                    ("django.db.backends.mssql", "MS SQL Server"),
                    ("django.db.backends.sybase", "Sybase"),
                ],
                default="django.db.backends.mysql",
                help_text="The type of database management system. Example: 'MySQL', 'PostgreSQL', 'MS SQL Server', 'Oracle'.",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="hostname",
            field=models.CharField(
                help_text="The remote host of the SQL connection. Should be a valid internet domain name.",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="name",
            field=models.CharField(
                help_text="The name of the connection, without spaces. Example: 'HRDatabase', 'SalesDatabase', 'InventoryDatabase'.",
                max_length=255,
                validators=[smarter.apps.plugin.models.validate_camel_case],
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="password",
            field=models.ForeignKey(
                blank=True,
                help_text="The password for authentication, if required.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sql_connections_password",
                to="account.secret",
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="port",
            field=models.IntegerField(
                default=3306,
                help_text="The port of the SQL connection. example: 3306 for MySQL.",
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="proxy_host",
            field=models.CharField(
                blank=True,
                help_text="The remote host of the SQL proxy connection. Should be a valid internet domain name.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="proxy_port",
            field=models.IntegerField(blank=True, help_text="The port of the SQL proxy connection.", null=True),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="proxy_username",
            field=models.CharField(
                blank=True,
                help_text="The username for the proxy connection.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="sqlconnection",
            name="username",
            field=models.CharField(
                blank=True,
                help_text="The database username.",
                max_length=255,
                null=True,
            ),
        ),
    ]
