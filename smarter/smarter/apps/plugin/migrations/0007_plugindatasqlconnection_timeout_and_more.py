# Generated by Django 5.1.7 on 2025-05-06 14:45
# pylint: disable=missing-module-docstring,missing-function-docstring,missing-class-docstring

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import smarter.apps.plugin.models


class Migration(migrations.Migration):

    dependencies = [
        ("account", "0008_alter_secret_options_alter_secret_last_accessed_and_more"),
        ("plugin", "0006_alter_pluginprompt_model"),
    ]

    operations = [
        migrations.AddField(
            model_name="plugindatasqlconnection",
            name="timeout",
            field=models.IntegerField(
                default=30,
                help_text="The timeout for the database connection in seconds. Default is 30 seconds.",
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.CreateModel(
            name="PluginDataApiConnection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the API connection, camelCase, without spaces. Example: 'weatherApi', 'stockApi'.",
                        max_length=255,
                        validators=[smarter.apps.plugin.models.validate_no_spaces],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="A brief description of the API connection. Be verbose, but not too verbose."
                    ),
                ),
                (
                    "base_url",
                    models.URLField(help_text="The root domain of the API. Example: 'https://api.example.com'."),
                ),
                (
                    "auth_method",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("basic", "Basic Auth"),
                            ("token", "Token Auth"),
                            ("oauth", "OAuth"),
                        ],
                        default="none",
                        help_text="The authentication method to use. Example: 'Basic Auth', 'Token Auth'.",
                        max_length=50,
                    ),
                ),
                (
                    "timeout",
                    models.IntegerField(
                        default=30,
                        help_text="The timeout for the API request in seconds. Default is 30 seconds.",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("version", models.CharField(default="1.0.0", max_length=255)),
                ("proxy_host", models.CharField(blank=True, max_length=255, null=True)),
                ("proxy_port", models.IntegerField(blank=True, null=True)),
                (
                    "proxy_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "proxy_password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plugin_data_api_connections",
                        to="account.account",
                    ),
                ),
                (
                    "api_key",
                    models.ForeignKey(
                        blank=True,
                        help_text="The API key for authentication, if required.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plugin_data_api_connections",
                        to="account.secret",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PluginDataApi",
            fields=[
                (
                    "plugindatabase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="plugin.plugindatabase",
                    ),
                ),
                (
                    "endpoint",
                    models.CharField(
                        help_text="The endpoint path for the API. Example: '/v1/weather'.",
                        max_length=255,
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="A JSON dict containing parameter names and data types. Example: {'city': {'type': 'string', 'description': 'City name'}}",
                        null=True,
                    ),
                ),
                (
                    "headers",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="A JSON dict containing headers to be sent with the API request. Example: {'Authorization': 'Bearer <token>'}",
                        null=True,
                    ),
                ),
                (
                    "body",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="A JSON dict containing the body of the API request, if applicable.",
                        null=True,
                    ),
                ),
                (
                    "test_values",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="A JSON dict containing test values for each parameter. Example: {'city': 'San Francisco'}",
                        null=True,
                    ),
                ),
                (
                    "connection",
                    models.ForeignKey(
                        help_text="The API connection associated with this plugin.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plugin_data_api",
                        to="plugin.plugindataapiconnection",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("plugin.plugindatabase",),
        ),
    ]
