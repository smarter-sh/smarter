---
#------------------------------------------------------------------------------
# For local development, you can use the following docker-compose file
# to run the application. This file will start a MySQL database, a Redis
# server, a Celery worker, and the application itself. The application
# will be available at http://localhost:8000.
#------------------------------------------------------------------------------
version: "3"

services:
  mysql:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: smarter
      MYSQL_DATABASE: smarter
      MYSQL_USER: smarter
      MYSQL_PASSWORD: smarter
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - 3306:3306
    mem_limit: 500m
    cpus: "0.50"

  redis-master:
    image: redis:latest
    command: redis-server --requirepass smarter
    ports:
      - 6379:6379
    mem_limit: 250m
    cpus: "0.25"

  worker:
    container_name: worker
    x-build:
      type: docker
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: local
      cache_from:
        - smarter
    image: smarter
    command: >
      bash -c "watchmedo auto-restart --directory=./ --pattern='*.py' --recursive --
      celery -A smarter.celery.celery_app worker --loglevel=info"  image: smarter
    volumes:
      - ./smarter:/app
    depends_on:
      - mysql
      - redis-master
    env_file:
      - ./.env

  beat:
    container_name: beat
    x-build:
      type: docker
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: local
      cache_from:
        - smarter
    command: >
      bash -c "celery -A smarter.celery.celery_app beat --loglevel=info"
    volumes:
      - ./smarter:/app
    depends_on:
      - mysql
      - redis-master
    env_file:
      - ./.env

  app:
    container_name: app
    x-build:
      type: docker
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: local
      cache_from:
        - smarter
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- gunicorn smarter.wsgi:application -b 0.0.0.0:8000
    image: smarter
    volumes:
      - ./smarter:/app
    ports:
      - 8000:8000
    depends_on:
      - mysql
      - redis-master
      - worker
      - beat
    env_file:
      - ./.env
    mem_limit: 500m
    cpus: "0.50"
